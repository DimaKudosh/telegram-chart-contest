(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):(a=a||self,a.LineChart=b())})(this,function(){'use strict';var g=Math.max,h=Math.round,j=Math.floor,k=Math.ceil;function a(a){return p.format(a)}function b(a){return q.format(a)}function c(){return"_"+Math.random().toString(36).substr(2,9)}function d(a,b){var c=Math.pow,d=Math.log10;if(0===a)return 0;const e=c(10,k(d(a))-1);for(let c=0;c<b.length-1;c++){const d=b[c]*e,f=(d+b[c+1]*e)/2;if(a<=f)return d}return b[b.length-1]*e}function e(a,b,c=6,e=[1,2,2.5,3,5,6,10]){const f=d((b-a)/(c-1),e),g=j(a/f)*f,h=k(b/f)*f;return{low:g,high:h,spacing:f}}function f(a,b){void 0===b&&(b={});var c=b.insertAt;if(a&&"undefined"!=typeof document){var d=document.head||document.getElementsByTagName("head")[0],e=document.createElement("style");e.type="text/css","top"===c?d.firstChild?d.insertBefore(e,d.firstChild):d.appendChild(e):d.appendChild(e),e.styleSheet?e.styleSheet.cssText=a:e.appendChild(document.createTextNode(a))}}class l{constructor(a,b,c,d=!1){this.width=a,this.height=b,this.offsets=c,this.canvas=this.create(),this.ctx=this.canvas.getContext("2d"),this.xRatio=1,this.yRatio=1,d&&this.canvas.classList.add("telegram-chart-top-layer")}create(){const a=document.createElement("canvas");return a.width=this.width,a.height=this.height,a.addEventListener("dragstart",function(a){a.preventDefault()}),a}getCtx(){return this.ctx}computeXRatio(a){const b=this.offsets;return(this.width-b.left-b.right)/a}computeYRatio(a){const b=this.offsets;return(this.height-b.top-b.bottom)/a}setAbsoluteValues(a,b){a&&(this.xRatio=this.computeXRatio(a)),b&&(this.yRatio=this.computeYRatio(b))}translateY(a){return h(this.height-a*this.yRatio)-this.offsets.bottom}translateX(a){return h(a*this.xRatio)+this.offsets.left}translatePoint(a,b){return[this.translateX(a),this.translateY(b)]}drawLine(a,b,c=3){const d=this.ctx;d.beginPath(),d.strokeStyle=b,d.lineWidth=c,d.moveTo(...this.translatePoint(...a[0]));for(let e=1;e<a.length;e++){const[b,c]=this.translatePoint(...a[e]);d.lineTo(b,c)}d.stroke(),d.closePath()}drawArc(a,b,c,d,e=3,f=null){var g=Math.PI;const h=this.ctx;h.beginPath(),h.strokeStyle=d,h.lineWidth=e,[a,b]=this.translatePoint(a,b),h.arc(a,b,c,0,2*g),h.stroke(),f&&(h.fillStyle=f,h.fill())}putText(a,b,c,d,e){const f=this.ctx;[a,b]=this.translatePoint(a,b),f.fillText(c,a+(d?d:0),b+(e?e:0))}clear(){this.ctx.clearRect(0,0,this.width,this.height)}}class m{constructor(a){this.options=a}updateOptions(a){this.options={...this.options,...a}}}class n extends m{constructor(a,b){super(b),this.canvas=a,this.ctx=a.getCtx()}setAbsoluteValues(a,b){this.canvas.setAbsoluteValues(a,b)}clear(){this.canvas.clear()}}class o{constructor(a=300){this.duration=a,this.reqId=null,this.isRunning=!1,this.cancelCallback=null}run(a,b,c,d){const e=this.duration,f=Date.now,g=f();this.cancelCallback=d;const h=()=>{a.save();const d=(f()-g)/e;return 1<=d?(b(1),c&&c(),a.restore(),this.isRunning=!1,void(this.cancelCallback=null)):void(b(d),a.restore(),this.reqId=requestAnimationFrame(h))};this.isRunning=!0,h()}cancel(){const{reqId:a,cancelCallback:b}=this;a&&cancelAnimationFrame(a),b&&b(),this.isRunning=!1,this.reqId=this.cancelCallback=null}}const p=new Intl.DateTimeFormat("en-us",{month:"short",day:"numeric"}),q=new Intl.DateTimeFormat("en-us",{weekday:"short",month:"short",day:"numeric"}),r=[1,2,3,4,6,8,10];class s extends n{constructor(a,b,c){super(a,c);const d=this.ctx;d.textAlign="center",d.font=c.font,d.fillStyle=c.color,this.animation=new o(c.animation),this.indexOffset=.5,this.bottomOffset=5,this.height=25,this.allLabels=b,this.start=0,this.end=b.length,this.appearSpacing=null,this.hideSpacing=null}updateOptions(a){super.updateOptions(a);const{ctx:b,options:c}=this;b.font=c.font,b.fillStyle=c.color,this.simpleDraw(this.appearSpacing)}setSelection(a,b){this.start=a,this.end=b}clear(){const{canvas:a,height:b}=this;this.ctx.clearRect(0,a.height-b,a.width,b)}draw(a){const{options:{totalTicks:c},appearSpacing:b}=this,{spacing:d}=e(0,a.length,c,r);return b&&d!==b?void(this.hideSpacing=b,this.appearSpacing=d,this.runAnimatedDraw()):(this.appearSpacing=d,void this.simpleDraw(d))}simpleDraw(a){this.clear();const b=[];for(let c=this.indexOffset;c<this.allLabels.length/a;c++)b.push(j(c*a));this.drawLabels(b)}runAnimatedDraw(){const{animation:a,ctx:b,indexOffset:c}=this;a.isRunning||a.run(b,a=>{this.clear();const{allLabels:d,appearSpacing:e,hideSpacing:f}=this,g=new Set,h=new Set,k=d.length;for(let b=c;b<k/e;b++)g.add(j(b*e));for(let b=c;b<k/f;b++)h.add(j(b*f));const l=new Set([...g].filter(a=>h.has(a))),m=new Set([...g].filter(a=>!l.has(a))),n=new Set([...h].filter(a=>!l.has(a)));this.drawLabels(l),b.globalAlpha=a,this.drawLabels(m),b.globalAlpha=1-a,this.drawLabels(n)})}drawLabels(b){const c=this.canvas,d=-this.start*c.xRatio;for(const e of b){const b=this.allLabels[e];c.putText(e,0,a(b).toString(),d,-this.bottomOffset)}}}class t extends n{constructor(a,b){super(a,b),this.previousTicks=[],this.ctx.font=this.options.font,this.textOffset=-5,this.animation=new o(b.animation),this.maxY=0,this.lastDrawn=null}updateOptions(a){super.updateOptions(a),this.canvas.clear(),this.drawTicks(...this.lastDrawn)}draw(a,b){const{canvas:c,options:{totalTicks:d}}=this,e=h(b/(d-1)),f=[];c.clear();for(let c=0;c<d;c++)f.push(c*e);this.drawTicks(a,f),this.previousTicks=f}animatedDraw(a,b){if(this.maxY===b)return;const{animation:c,options:{totalTicks:f},ctx:d,canvas:e}=this,g=h(b/(f-1)),j=[],k=e.computeXRatio(a.length-1),l=e.computeYRatio(b),m=e.yRatio;this.maxY=b,c.cancel();for(let c=0;c<f;c++)j.push(c*g);e.xRatio=k;const n=()=>this.draw(a,b);c.run(d,b=>{e.clear(),e.yRatio=m+b*(l-m),d.globalAlpha=1-b,this.drawTicks(a,this.previousTicks),d.globalAlpha=b,this.drawTicks(a,j)},n,n)}drawTicks(a,b){const{canvas:c,ctx:d,options:e}=this;for(const f of b)d.fillStyle=e.color,c.putText(0,f,f.toString(),0,this.textOffset),c.drawLine([[0,f],[a.length,f]],e.underlineColor,2);this.lastDrawn=[a,b]}}const u="r",v="d";class w extends n{constructor(a,b,c){super(a,c),this.target=b,this.totalLabels=b.allLabels.length,this.canvasHeight=a.height,this.canvasWidth=a.width,this.borderWidth=5,this.start=this.borderWidth,this.end=this.canvasWidth-this.borderWidth,this.lastSelection=[0,this.totalLabels-1],this.status=null,this.lastX=null,this.lastCursor="default",this.cursorOnCanvas=!1,setTimeout(()=>{this.canvasOffset=a.canvas.getBoundingClientRect().left},300);const d=window.document,e="ontouchstart"in window.document.documentElement,f=this.ctx.canvas,g=f.addEventListener.bind(f);g(e?"touchstart":"mousedown",this.onMouseDown.bind(this)),e||(g("mouseover",this.onMouseOver.bind(this)),g("mouseout",this.onMouseOut.bind(this)));const h=d.addEventListener.bind(d);h(e?"touchmove":"mousemove",this.onMouseMove.bind(this)),h(e?"touchend":"mouseup",this.onMouseUp.bind(this)),this.body=d.body}updateOptions(a){super.updateOptions(a),this.draw()}draw(){const{canvas:a,ctx:b,start:c,end:d,borderWidth:e,canvasWidth:f,canvasHeight:g,options:h}=this;a.clear(),b.save(),b.fillStyle=h.backgroundColor,b.globalAlpha=h.backgroundAlpha,b.fillRect(0,0,c-e,g),b.fillRect(d+e,0,f-d+e,g),b.restore(),b.strokeStyle=h.borderColor,b.lineWidth=2*e,b.strokeRect(c,0,d-c,g)}setCursor(a){if(this.cursorOnCanvas||this.status){const b=this.getStatus(a);let c;c=b?b===v?"grab":"ew-resize":this.lastCursor,this.body.style.cursor=c}}updateTarget(){const{totalLabels:a,canvasWidth:b,borderWidth:c,start:d,end:e,lastSelection:f}=this,g=a/(b-2*c),i=h((d-c)*g),j=i+(e-d)*g;(f[0]!==i||f[1]!==j)&&(this.lastSelection=[i,j],this.target.setSelection(i,j))}getStatus(a){const{borderWidth:b,start:c,end:d}=this;return c-b<a&&a<c+b?"l":d-b<=a&&a<=d+b?u:c+b<a&&a<d-b?v:void 0}onMouseDown(a){const b=(a.pageX||a.touches[0].pageX)-this.canvasOffset,c=this.getStatus(b);this.status=c,c===v&&(this.lastX=b,this.body.style.cursor="grabbing")}onMouseMove(a){const b=(a.pageX||a.touches[0].pageX)-this.canvasOffset,c=this.status;if(!c)return void(this.cursorOnCanvas&&this.setCursor(b));const d=this.borderWidth,e=this.canvasWidth-d;let{start:f,end:g}=this;switch(c){case"l":f=f<d?d:b,g-f<.05*e&&(f=g-.05*e);break;case u:g=g>e?e:b,g-f<.05*e&&(g=f+.05*e);break;case v:{const a=g-f;let c=b-this.lastX;this.lastX=b,0>c&&(f+=c,f<d&&(f=d),g=f+a),0<c&&(g+=c,g>e&&(g=e),f=g-a);break}}f>g&&(g=f),f=f<d?d:f,g=g>e?e:g,this.start=f,this.end=g,this.updateTarget(),this.draw()}onMouseUp(){this.status&&this.updateTarget(),this.status=null,this.lastX=null,this.cursorOnCanvas||(this.body.style.cursor=this.lastCursor)}onMouseOver(){this.cursorOnCanvas=!0,this.status||(this.lastCursor=this.body.style.cursor)}onMouseOut(){this.cursorOnCanvas=!1,this.status||(this.body.style.cursor=this.lastCursor)}}class x{constructor({data:a,color:b,name:c}){this.allData=a,this.color=b,this.name=c,this.start=0,this.end=a.length,this.isDisplayed=!0}getMax(){return g(...this.data)}getMin(){var a=Math.min;return a(...this.data)}setRanges(a,b){this.start=a,this.end=b}get data(){return this.allData.slice(this.start,this.end+1)}}class y extends n{constructor(a,b,c){super(a,c),this.labels=b.labels,this.datasets=b.datasets,this.maxValue=b.maxValue,this.chart=b,this.offsetX=25,this.lastIndex=0,this.create(),a.canvas.addEventListener("mousemove",this.onMouseMove.bind(this),!0),a.canvas.addEventListener("mouseout",this.onMouseOut.bind(this),!0)}updateOptions(a){super.updateOptions(a),this.title.style.color=a.textColor}create(){const a=document.createElement("div");a.classList.add("telegram-chart-tooltip");const b=document.createElement("div");b.classList.add("telegram-chart-tooltip-title");const c=document.createElement("div");c.classList.add("telegram-chart-tooltip-group");const d=[],e=[];for(const a of this.datasets){const b=document.createElement("div");b.classList.add("telegram-chart-tooltip-dataset"),b.style.color=a.color,d.push(b);const f=document.createElement("div");f.classList.add("telegram-chart-tooltip-value"),e.push(f);const g=document.createElement("div");g.classList.add("telegram-chart-tooltip-name"),g.innerText=a.name,b.appendChild(f),b.appendChild(g),c.appendChild(b)}a.appendChild(b),a.appendChild(c),this.chart.container.appendChild(a),this.mainContainer=a,this.title=b,this.containers=d,this.values=e}placeTooltip(a){const b=this.canvas.width,c=this.mainContainer,d=c.clientWidth,e=a-this.offsetX;let f;f=5>e?5:e+d>b-5?b-d-5:e,c.style.left=f+"px"}clear(){const{canvas:a,ctx:b}=this,[c,d]=a.translatePoint(this.lastIndex,0);b.clearRect(c-10,0,20,d)}onMouseMove(a){const{canvas:c,chart:{labels:f},datasets:d,options:e}=this;this.mainContainer.style.display="block",this.mainContainer.style.backgroundColor=this.options.backgroundColor;const g=a.offsetX-c.canvas.offsetLeft,h=j(g/c.width*f.length);this.title.textContent=b(f[h]),this.clear(),c.drawLine([[h,0],[h,this.maxValue]],e.color,2);for(let b=0;b<d.length;b++){const a=d[b],c=this.containers[b];if(!a.isDisplayed){c.style.display="none";continue}else c.style.display="block";this.values[b].textContent=a.data[h],this.canvas.drawArc(h,a.data[h],4,a.color,4,e.backgroundColor)}this.placeTooltip(g),this.lastIndex=h}onMouseOut(){this.clear(),this.mainContainer.style.display="none"}}class z extends n{constructor(a,b,c){super(a,c),this.datasets=b,this.isDisplayed=!1,this.callbacks=[],this.animation=new o,this.ctx.lineJoin="round",this.hiddingDatasets=[],this.appearingDatasets=[]}animate(){const{animation:a,callbacks:b,ctx:c}=this;a.cancel(),a.run(c,a=>{for(const c of b)c(a);this.draw(a)},()=>{this.appearingDatasets=[],this.hiddingDatasets=[]}),this.callbacks=[]}animatedResize(a,b){const c=this.canvas,d=c.computeYRatio(b),e=c.yRatio;return c.xRatio=c.computeXRatio(a),this.callbacks.push(a=>{c.yRatio=e+a*(d-e)}),this}toggle(a){const{appearingDatasets:b,hiddingDatasets:c}=this;this.datasets[a].isDisplayed?(b.push(a),c.splice(c.indexOf(a),1)):(c.push(a),b.splice(b.indexOf(a),1))}drawDataset(a){this.canvas.drawLine(Array.from(a.data.entries()),a.color)}draw(a=1){this.clear();const{datasets:b,appearingDatasets:c,hiddingDatasets:d,ctx:e}=this;for(let e=0;e<b.length;e++)-1===c.indexOf(e)&&-1===d.indexOf(e)&&b[e].isDisplayed&&this.drawDataset(b[e]);if(e.save(),c){e.globalAlpha=a;for(const a of c)this.drawDataset(b[a])}if(d){e.globalAlpha=1-a;for(const a of d)this.drawDataset(b[a])}e.restore()}}class A extends m{constructor(a,b,c){super(c),this.chart=b,this.container=this.create(),a.appendChild(this.container)}updateOptions(a){super.updateOptions(a);const{container:b,options:c}=this;b.style.color=c.textColor;for(let d of b.childNodes)d.style.borderColor=c.borderColor}create(){const{chart:a,options:b}=this,d=a.datasets,e=document.createElement("div");e.classList.add("telegram-chart-legend"),e.style.color=b.textColor,e.style.borderColor=b.borderColor;for(const b of d){const f=c(),g=document.createElement("div");g.classList.add("telegram-chart-legend-checkbox");const h=document.createElement("label");h.setAttribute("for",f);const i=document.createElement("input");i.type="checkbox",i.id=f,i.checked=!0,i.addEventListener("click",()=>{a.emitLegendChange(d.indexOf(b),i.checked)});const j=document.createElement("span");j.style.borderColor=b.color,h.appendChild(j),h.appendChild(document.createTextNode(b.name)),g.appendChild(i),g.appendChild(h),e.appendChild(g)}return e}}const B={yAxis:{display:!0,font:"15px Arial",totalTicks:6,animation:300,color:"#96a2aa",underlineColor:"#f2f4f5"},xAxis:{display:!0,font:"15px Arial",totalTicks:8,color:"#96a2aa",animation:300},legend:{display:!0,borderColor:"#344658",textColor:"#000"},tooltip:{display:!0,textColor:"#000",color:"#dfe6eb",backgroundColor:"#fff"},selection:{display:!1},height:400,offsets:{top:20,right:7,bottom:25,left:7},preview:{display:!0,height:100,offsets:{top:5,right:0,bottom:5,left:0},yAxis:{display:!1},xAxis:{display:!1},legend:{display:!1},tooltip:{display:!1},selection:{display:!0,backgroundAlpha:.75,backgroundColor:"#f5f9fb",borderColor:"#ddeaf3"},preview:{display:!1}}};class C{constructor(a,b,c,d){const e={...B,...d};this.options=e;const f=e.offsets,g=e.width||a.clientWidth,h=e.height||a.clientHeight;this.allLabels=b,this.start=0,this.end=b.length,this.datasets=c.map(a=>new x(a)),this.calculateMaxValue(),this.container=this.constructor.createContainer(g,h);const i=[];if(e.xAxis.display){const a=new l(g,h,{top:0,left:0,right:0,bottom:0});i.push(a),this.xAxis=new s(a,this.allLabels,e.xAxis)}else this.xAxis=null;if(e.yAxis.display){const a=new l(g,h,f);i.push(a),this.yAxis=new t(a,e.yAxis)}else this.yAxis=null;if(e.tooltip.display){const a=new l(g,h,f,!0);i.push(a),this.tooltip=new y(a,this,e.tooltip)}const j=new l(g,h,f);if(i.push(j),this.lines=new z(j,this.datasets,{}),e.selection.display){const a=new l(g,h,f,!0);i.push(a),this.selection=new w(a,e.target,e.selection)}else this.selection=null;for(const e of i)this.container.appendChild(e.canvas),e.setAbsoluteValues(this.labels.length-1,this.maxValue);if(a.appendChild(this.container),e.preview.display){const d=e.preview;d.target=this,this.preview=new C(a,b,c,d)}else this.preview=null;this.legend=e.legend.display?new A(a,this,e.legend):null,this.draw()}get labels(){return this.allLabels.slice(this.start,this.end+1)}static createContainer(a,b){const c=document.createElement("div");return c.classList.add("telegram-chart-container"),c.style.width=a+"px",c.style.height=b+"px",c}updateOptions(a){const b={...this.options,...a},{tooltip:c,xAxis:d,yAxis:e,selection:f,legend:g,preview:h}=this;c&&c.updateOptions(b.tooltip),d&&d.updateOptions(b.xAxis),e&&e.updateOptions(b.yAxis),f&&f.updateOptions(b.selection),g&&g.updateOptions(b.legend),h&&h.updateOptions(b.preview),this.options=b}calculateMaxValue(){const a=this.maxValue,b=g(...this.datasets.filter(a=>a.isDisplayed).map(a=>a.getMax())),{high:c}=e(0,b,this.options.yAxis.totalTicks);return this.maxValue=c,a!==c}draw(){this.xAxis&&this.xAxis.draw(this.labels,this.maxValue),this.yAxis&&this.yAxis.draw(this.labels,this.maxValue),this.selection&&this.selection.draw(),this.lines.draw()}setSelection(a,b){this.start=a,this.end=b;const{labels:c,xAxis:d,yAxis:e,tooltip:f,datasets:g}=this,h=c.length-1;for(const c of g)c.setRanges(a,b);if(d&&(d.setSelection(a,b),d.setAbsoluteValues(h,this.maxValue),d.draw(c)),!g.some(a=>a.isDisplayed))return;const i=this.calculateMaxValue(),j=this.maxValue;i&&e&&e.animatedDraw(c,j),f&&f.setAbsoluteValues(h,j),this.lines.animatedResize(h,j).animate()}emitLegendChange(a,b){const{maxValue:c,lines:d,labels:e,preview:f,yAxis:g,tooltip:h,datasets:i}=this;i[a].isDisplayed=b;const j=this.calculateMaxValue(),k=e.length-1,l=this.maxValue||c;d.toggle(a),f&&f.emitLegendChange(a,b),j&&(g&&g.animatedDraw(e,l),h&&h.setAbsoluteValues(k,l),d.animatedResize(k,l)),d.animate()}}f(".telegram-chart-container {\n  position: relative;\n  overflow-x: hidden;\n  margin-bottom: 50px; }\n  .telegram-chart-container canvas {\n    position: absolute; }\n\n.telegram-chart-legend {\n  margin-bottom: 50px; }\n\n.telegram-chart-top-layer {\n  z-index: 1; }\n\n.telegram-chart-tooltip {\n  display: none;\n  position: absolute;\n  top: 1px;\n  padding: 10px;\n  box-shadow: 0 0 3px #ccc;\n  border-radius: 4px;\n  z-index: 1001;\n  pointer-events: none; }\n  .telegram-chart-tooltip-title {\n    font-size: 16px; }\n  .telegram-chart-tooltip-group {\n    display: flex;\n    justify-content: space-between; }\n  .telegram-chart-tooltip-dataset {\n    margin-right: 7px; }\n  .telegram-chart-tooltip-value {\n    font-size: 16px;\n    font-weight: 600; }\n");return f(".telegram-chart-legend-checkbox {\n  display: inline-block;\n  border: 2px solid #e6ecf0;\n  border-radius: 30px;\n  padding: 6px 12px;\n  margin-right: 10px;\n  vertical-align: top; }\n  .telegram-chart-legend-checkbox input[type='checkbox'] {\n    display: none; }\n    .telegram-chart-legend-checkbox input[type='checkbox'] + label {\n      box-sizing: border-box;\n      user-select: none;\n      position: relative;\n      display: flex;\n      align-items: center; }\n      .telegram-chart-legend-checkbox input[type='checkbox'] + label > span {\n        box-sizing: border-box;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        margin-right: 30px;\n        width: 30px;\n        height: 30px;\n        border-radius: 30px;\n        background: transparent;\n        border: 2px solid #e6ecf0;\n        cursor: pointer;\n        transition: border 250ms linear; }\n    .telegram-chart-legend-checkbox input[type='checkbox']:checked + label > span {\n      border-width: 15px; }\n      .telegram-chart-legend-checkbox input[type='checkbox']:checked + label > span:before {\n        box-sizing: border-box;\n        user-select: none;\n        content: \"\";\n        position: absolute;\n        top: 6px;\n        border-right: 3px solid transparent;\n        border-bottom: 3px solid transparent;\n        transform: rotate(45deg);\n        animation: checkbox-check 125ms 125ms linear forwards; }\n\n@keyframes checkbox-check {\n  0% {\n    border-color: #fff;\n    width: 0;\n    height: 0; }\n  100% {\n    border-color: #fff;\n    width: 9px;\n    height: 15px; } }\n"),C});
